---
version: 2
jobs:
  lint:
    machine:
      enabled: true
    steps:
      - checkout
      - run:
          name: Rebase on-top of github target
          command: ./devops/scripts/rebase-ci.sh

      - run: make ci-lint

  trusty-app-tests:
    machine:
      enabled: true
    environment:
      DOCKER_API_VERSION: 1.23
      BASE_OS: trusty
    parallelism: 3
    steps:
      - checkout
      - run:
          name: Rebase on-top of github target
          command: ./devops/scripts/rebase-ci.sh

      - run:
          name: Ensure cache dir exists and permissions are good
          command: |
            sudo mkdir -p /caches && sudo chown circleci: -R /caches

      - restore_cache:
          key: v1-sd-layers-{{ checksum "securedrop/dockerfiles/trusty/Dockerfile" }}
          paths:
            - /caches/layers.tar.gz

      - run:
          name: Load image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/layers.tar |true

      - run:
          name: Build Docker image
          command: |
            set +o pipefail
            docker images
            fromtag=$(docker images |grep securedrop-test-trusty |head -n1 |awk '{print $2}')
            cd securedrop && DOCKER_BUILD_ARGUMENTS="--cache-from securedrop-test-trusty:${fromtag:-latest}" ./bin/dev-shell true

      - run:
          name: Save Docker image layer cache
          command: |
            docker images
            docker save -o /caches/layers.tar securedrop-test-trusty:latest

      - save_cache:
          key: v1-sd-layers-{{ checksum "securedrop/dockerfiles/trusty/Dockerfile" }}
          paths:
            - /caches/layers.tar

      - run:
          name: Make test results directory
          command: mkdir -p ~/test-results

      - run:
          name: Run tests
          command: |
            export TESTFILES=$(cd securedrop; circleci tests glob 'tests/test*py' 'tests/**/test*py' |circleci tests split --split-by=timings |xargs echo)
            docker rm -f securedrop-test-trusty || true
            fromtag=$(docker images |grep securedrop-test-trusty |head -n1 |awk '{print $2}')
            cd securedrop && DOCKER_RUN_ARGUMENTS=$(bash <(curl -s https://codecov.io/env)) DOCKER_BUILD_ARGUMENTS="--cache-from securedrop-test-trusty:${fromtag:-latest}" make test

      - store_test_results:
          path: ~/test-results

      - store_artifacts:
          path: ~/test-results

  xenial-app-tests:
    machine:
      enabled: true
    environment:
      DOCKER_API_VERSION: 1.23
      BASE_OS: xenial
    parallelism: 3
    steps:
      - checkout
      - run:
          name: Rebase on-top of github target
          command: ./devops/scripts/rebase-ci.sh

      - run:
          name: Ensure cache dir exists and permissions are good
          command: |
            sudo mkdir -p /caches && sudo chown circleci: -R /caches

      - restore_cache:
          key: v1-sd-layers-{{ checksum "securedrop/dockerfiles/xenial/Dockerfile" }}
          paths:
            - /caches/layers.tar.gz

      - run:
          name: Load image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/layers.tar |true

      - run:
          name: Build Docker images
          command: |
            set +o pipefail
            docker images
            fromtag=$(docker images |grep securedrop-test-xenial |head -n1 |awk '{print $2}')
            cd securedrop && DOCKER_BUILD_ARGUMENTS="--cache-from securedrop-test-xenial:${fromtag:-latest}" ./bin/dev-shell true

      - run:
          name: Save Docker image layer cache
          command: |
            docker images
            docker save -o /caches/layers.tar securedrop-test-xenial:latest

      - save_cache:
          key: v1-sd-layers-{{ checksum "securedrop/dockerfiles/xenial/Dockerfile" }}
          paths:
            - /caches/layers.tar

      - run:
          name: Make test results directory
          command: mkdir -p ~/test-results

      - run:
          name: Run tests
          command: |
            export TESTFILES=$(cd securedrop; circleci tests glob 'tests/test*py' 'tests/**/test*py' |circleci tests split --split-by=timings |xargs echo)
            docker rm -f securedrop-test-xenial || true
            fromtag=$(docker images |grep securedrop-test-xenial |head -n1 |awk '{print $2}')
            cd securedrop && DOCKER_RUN_ARGUMENTS=$(bash <(curl -s https://codecov.io/env)) DOCKER_BUILD_ARGUMENTS="--cache-from securedrop-test-xenial:${fromtag:-latest}" make test

      - store_test_results:
          path: ~/test-results

      - store_artifacts:
          path: ~/test-results

  translation-tests:
    machine:
      enabled: true
    environment:
      DOCKER_API_VERSION: 1.23
      BASE_OS: xenial
    parallelism: 3
    steps:
      - checkout
      - run:
          name: Rebase ontop of github target
          command: ./devops/scripts/rebase-ci.sh

      - run:
          name: Run tests
          command: |
            cd securedrop && make translation-test

  admin-tests:
    docker:
      - image: gcr.io/cloud-builders/docker
    steps:
      - run: apt-get install -y make
      - checkout
      - setup_remote_docker
      - run: cd admin ; make test

  updater-gui-tests:
    docker:
      - image: circleci/python:3.5
    steps:
      - checkout

      - run:
          name: Install libqt5designer5
          command: sudo apt-get update && sudo apt-get install -y libqt5designer5

      - run:
          name: Install pip==18.0 to work pipenv/pip bug
          command: |
            cd journalist_gui
            pipenv run pip install pip==18.0

      - run:
          name: Install requirements
          command: |
            cd journalist_gui
            pipenv install

      - run:
          name: Run tests
          command: |
            cd journalist_gui
            xvfb-run -a pipenv run python3 test_gui.py

  static-analysis-and-no-known-cves:
    machine:
      enabled: true
    steps:
      - checkout
      - run:
          name: Check Python dependencies for CVEs
          command: make safety

      - run:
          name: Run static security testing on source code
          command: make bandit

  staging-test-with-rebase:
    machine:
      enabled: true

    working_directory: ~/sd
    steps:
      - checkout

      - run:
          name: Rebase on-top of github target
          command: ./devops/scripts/rebase-ci.sh

      - run:
          name: Run Staging tests on GCE
          command: make ci-go

      - run:
          name: Ensure environment torn down
          # Always report true, since env should will destroyed already
          # if all tests passed.
          command: make ci-teardown || true
          when: always

      - store_test_results:
          path: ~/sd/junit

      - store_artifacts:
          path: ~/sd/junit

  staging-test-with-rebase-xenial:
    machine:
      enabled: true

    working_directory: ~/sd
    steps:
      - checkout

      - run:
          name: Rebase on-top of github target
          command: ./devops/scripts/rebase-ci.sh

      - run:
          name: Run Staging tests on GCE (Xenial)
          command: make ci-go-xenial

      - run:
          name: Ensure environment torn down
          # Always report true, since env should will destroyed already
          # if all tests passed.
          command: make ci-teardown || true
          when: always

      - store_test_results:
          path: ~/sd/junit

      - store_artifacts:
          path: ~/sd/junit

workflows:
  version: 2
  securedrop_ci:
    jobs:
      - lint
      - xenial-app-tests:
          filters:
            branches:
              ignore:
                - /docs-.*/
                - /i18n-.*/
      - admin-tests:
          filters:
            branches:
              ignore:
                - /docs-.*/
                - /i18n-.*/
      - updater-gui-tests:
          filters:
            branches:
              ignore:
                - /docs-.*/
                - /i18n-.*/
      - static-analysis-and-no-known-cves:
          filters:
            branches:
              ignore:
                - /docs-.*/
                - /i18n-.*/
      - staging-test-with-rebase-xenial:
          filters:
            branches:
              ignore:
                - /docs-.*/
                - /i18n-.*/
          requires:
            - lint
      - translation-tests:
          filters:
            branches:
              ignore:
                - /docs-.*/

  nightly:
    triggers:
      - schedule:
          cron: "0 4 * * *"
          filters:
            branches:
              only:
                - develop
    jobs:
      - static-analysis-and-no-known-cves
      - staging-test-with-rebase
      - trusty-app-tests
